###############################################################################
# Test function create_order
###############################################################################

# @TODO Pasar a api nueva

# -
#     Create customer
# -
#     !record {model: res.partner, id: customer_1}: |
#         name: 'Customer 1'

-
    Test function create_order with all required data
-
    # !python {model: sale.order, id: sale_order_1}: |
    !python {model: sale.order}: |
        # Create partner
        partner_id = self.pool.get('res.partner').create(
            cr, uid, {'name': 'Customer 01'})
        order_data = {
            'partner_id': partner_id,
            'partner_invoice_id': partner_id,
            'partner_shipping_id': partner_id,
            'warehouse_id': ref('stock.warehouse0')
        }
        order = self.pool('sale.order').create_order(cr, uid, order_data)

-
    Test function create_order without partner_id
-
    !python {model: sale.order}: |
        order = self.pool('sale.order').create_order(cr, uid, {})
        assert order == None, 'Error, no debe permitir crear un pedido de venta sin cliente.'

-
    Test function create_order without partner_invoice_id
-
    !python {model: sale.order}: |
        partner_id = self.pool.get('res.partner').create(
            cr, uid, {'name': 'Customer 01'})
        order_data = {
            'partner_id': partner_id,
            'partner_shipping_id': partner_id,
            'warehouse_id': ref('stock.warehouse0')
        }
        order = self.pool('sale.order').create_order(cr, uid, order_data)
        assert order == None, 'Error, no debe permitir crear un pedido de venta sin direccion de facturacion.'
